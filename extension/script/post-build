#!/usr/bin/env node


const fs = require('fs-extra');
const path = require('path');
const rimrfaf = require('rimraf');
const process = require('process');
const execSync = require('child_process').execSync;

const baseDirectory = path.join(__dirname, '..');
const buildDirectory = path.join(baseDirectory, 'build');


// Clean & re-create build directory
// rimrfaf.sync(buildDirectory);
// fs.mkdirSync(buildDirectory);

var walkSync = function(dir, filelist) {
  var path = path || require('path')
  var fs = fs || require('fs'),
      files = fs.readdirSync(dir);
  filelist = filelist || [];
  files.forEach(function(file) {
    if (fs.statSync(path.join(dir, file)).isDirectory()) {
      filelist = walkSync(path.join(dir, file) + '/', filelist);
    }
    else {
      filelist.push(path.join(dir, file));
    }
  });
  return filelist;
};

// Copy all the static directories 
[
  'icons',
  'manifest.json'  
].forEach(directory => {
  fs.copySync(path.join(baseDirectory, directory), path.join(buildDirectory, directory))
});


// Copy over the react client we just built
execSync('cp -r ../bar/build build/bar', { cwd: baseDirectory })

let contentScriptFilepath =  path.join(buildDirectory, 'content-script.js')
let entrypoint = fs.readFileSync(path.join(buildDirectory, 'entrypoint.min.js')).toString().replace(/`/g, '\\`')
  .replace('\\r\\n]', '___HACKS___').split('\n')[0].replace('___HACKS___', '\\\r\\\\n]')
let contentScript = fs.readFileSync(contentScriptFilepath).toString()

// fs.writeFileSync(contentScriptFilepath, contentScript.replace('process.env.ENTRYPOINT_JS', `\`console.log('hello from content script')\``))
fs.writeFileSync(contentScriptFilepath, contentScript.replace('process.env.ENTRYPOINT_JS', `\`${entrypoint}\``))

// Move into the build directory
process.chdir(buildDirectory);


// List all the generated react files & add thos to the web_accessible_resources in the manifest
let clientFiles = walkSync('./bar')
let manifest = JSON.parse(fs.readFileSync('manifest.json'))
let webAccessibleResources = manifest['web_accessible_resources'].concat(clientFiles)
manifest['web_accessible_resources'] = webAccessibleResources

fs.writeFileSync('manifest.json', JSON.stringify(manifest, null, 2))

execSync('rm build/bar/manifest.json', { cwd: baseDirectory })
